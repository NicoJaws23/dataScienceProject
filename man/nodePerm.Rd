% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/netMetFunctions.R
\name{nodePerm}
\alias{nodePerm}
\title{Node based permutation}
\usage{
nodePerm(
  df,
  shuffler,
  formula,
  n,
  type = c("rpt", "rptPoisson", "GLMM", "GLMMpoisson"),
  grname,
  na.action,
  returnVal
)
}
\arguments{
\item{df}{A data frame containing data used in model functions}

\item{shuffler}{The variable in the dataframe to be permuted}

\item{formula}{The formula to enter into each model}

\item{n}{The number of permutations to run}

\item{type}{The model the user wants to run}

\item{grname}{The grouping name to be used for repeatability models}

\item{na.action}{The desired na actions}

\item{returnVal}{The value from the model the user wants to return}
}
\description{
This function allow the user to conduct a node based permutation
on network metrics. This function can be used for running permutation on repeatability
estimate and for generalized linear mixed models.
}
\examples{
s1 <- dplyr::mutate(s1, Season = 1, sType = "Mating")
s2 <- dplyr::mutate(s2, Season = 2, sType = "Winter")
s3 <- dplyr::mutate(s3, Season = 3, sType = "Birth")
s1Edges <- data.frame(from = s1$"Actor", to = s1$"Recip", weight = s1$groom.rate)
s1G <- igraph::graph_from_data_frame(d = s1Edges, directed = TRUE)
s2Edges <- data.frame(from = s2$"Actor", to = s2$"Recip", weight = s2$groom.rate)
s2G <- igraph::graph_from_data_frame(d = s2Edges, directed = TRUE)
s3Edges <- data.frame(from = s3$"Actor", to = s3$"Recip", weight = s3$groom.rate)
s3G <- igraph::graph_from_data_frame(d = s3Edges, directed = TRUE)
met1 <- metrics(s1G, s1Edges, cutoff = -1, clusterType = "local")
met2 <- metrics(s2G, s2Edges, cutoff = -1, clusterType = "local")
met3 <- metrics(s3G, s3Edges, cutoff = -1, clusterType = "local")
met1 <- dplyr::full_join(elo, met1, by = c("ID" = "ID"))
met1 <- met1 |>
 dplyr::select(-c(Elo.Sep, Elo.Dec)) |>
 dplyr::mutate(rank = Elo.May, Season = 1) |>
 dplyr::select(-Elo.May)
met2 <- dplyr::full_join(elo, met2, by = c("ID" = "ID"))
met2 <- met2 |>
 dplyr::select(-c(Elo.Dec, Elo.May)) |>
 dplyr::mutate(rank = Elo.Sep, Season = 2) |>
 dplyr::select(-Elo.Sep)
met3 <- dplyr::full_join(elo, met3, by = c("ID" = "ID"))
met3 <- met3 |>
 dplyr::select(-c(Elo.May, Elo.Sep)) |>
 dplyr::mutate(rank = Elo.Dec, Season = 3) |>
 dplyr::select(-Elo.Dec)
df <- dplyr::bind_rows(met1, met2, met3)
df <- df |>
 dplyr::mutate(Season = as.factor(Season))
c <- nodePerm(df = df, shuffler = "Sex", formula = In.Degree ~ (1|ID) + (1|Season) + Sex, n = 1000, type = "GLMM", returnVal = "SexM", na.action = na.exclude)
}
\keyword{permuation}
